// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Final form fields Text field component should not render error message if the field was not touched 1`] = `
<TextField
  input={
    Object {
      "name": "Foo",
      "value": "",
    }
  }
  isRequired={false}
  label="Foo"
  meta={
    Object {
      "error": "Error",
      "input": Object {
        "name": "Foo",
        "value": "",
      },
      "label": "Foo",
      "meta": Object {},
    }
  }
  type="text"
>
  <FinalFormField
    componentType="textField"
    input={
      Object {
        "name": "Foo",
        "value": "",
      }
    }
    isRequired={false}
    label="Foo"
    meta={
      Object {
        "error": "Error",
        "input": Object {
          "name": "Foo",
          "value": "",
        },
        "label": "Foo",
        "meta": Object {},
      }
    }
    type="text"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label "
      >
        Foo
      </label>
      <TextInput
        aria-label={null}
        className=""
        id="Foo"
        isAlt={false}
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        name="Foo"
        onChange={[Function]}
        type="text"
        value=""
      >
        <input
          aria-invalid={false}
          aria-label={null}
          className="pf-c-form-control"
          disabled={false}
          id="Foo"
          name="Foo"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </TextInput>
    </div>
  </FinalFormField>
</TextField>
`;

exports[`Final form fields Text field component should render correctly 1`] = `
<TextField
  input={
    Object {
      "name": "Foo",
      "value": "",
    }
  }
  isRequired={false}
  label="Foo"
  meta={Object {}}
  type="text"
>
  <FinalFormField
    componentType="textField"
    input={
      Object {
        "name": "Foo",
        "value": "",
      }
    }
    isRequired={false}
    label="Foo"
    meta={Object {}}
    type="text"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label "
      >
        Foo
      </label>
      <TextInput
        aria-label={null}
        className=""
        id="Foo"
        isAlt={false}
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        name="Foo"
        onChange={[Function]}
        type="text"
        value=""
      >
        <input
          aria-invalid={false}
          aria-label={null}
          className="pf-c-form-control"
          disabled={false}
          id="Foo"
          name="Foo"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </TextInput>
    </div>
  </FinalFormField>
</TextField>
`;

exports[`Final form fields Text field component should render error message 1`] = `
<TextField
  input={
    Object {
      "name": "Foo",
      "value": "",
    }
  }
  isRequired={false}
  label="Foo"
  meta={
    Object {
      "error": "Error",
      "input": Object {
        "name": "Foo",
        "value": "",
      },
      "label": "Foo",
      "meta": Object {},
      "touched": true,
    }
  }
  type="text"
>
  <FinalFormField
    componentType="textField"
    input={
      Object {
        "name": "Foo",
        "value": "",
      }
    }
    isRequired={false}
    label="Foo"
    meta={
      Object {
        "error": "Error",
        "input": Object {
          "name": "Foo",
          "value": "",
        },
        "label": "Foo",
        "meta": Object {},
        "touched": true,
      }
    }
    type="text"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label "
      >
        Foo
      </label>
      <TextInput
        aria-label={null}
        className=""
        id="Foo"
        isAlt={false}
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={false}
        name="Foo"
        onChange={[Function]}
        type="text"
        value=""
      >
        <input
          aria-invalid={true}
          aria-label={null}
          className="pf-c-form-control"
          disabled={false}
          id="Foo"
          name="Foo"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </TextInput>
      <p
        className="pf-c-form__helper-text pf-m-error"
        id="undefined-helper"
      >
        Error
      </p>
    </div>
  </FinalFormField>
</TextField>
`;

exports[`Final form fields Text field component should render helper text 1`] = `
<TextField
  helperText="Helper text"
  input={
    Object {
      "name": "Foo",
      "value": "",
    }
  }
  isRequired={false}
  label="Foo"
  meta={Object {}}
  type="text"
>
  <FinalFormField
    componentType="textField"
    helperText="Helper text"
    input={
      Object {
        "name": "Foo",
        "value": "",
      }
    }
    isRequired={false}
    label="Foo"
    meta={Object {}}
    type="text"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label "
      >
        Foo
      </label>
      <TextInput
        aria-label={null}
        className=""
        id="Foo"
        isAlt={false}
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        name="Foo"
        onChange={[Function]}
        type="text"
        value=""
      >
        <input
          aria-invalid={false}
          aria-label={null}
          className="pf-c-form-control"
          disabled={false}
          id="Foo"
          name="Foo"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </TextInput>
      <p
        className="pf-c-form__helper-text"
      >
        Helper text
      </p>
    </div>
  </FinalFormField>
</TextField>
`;

exports[`Final form fields Text field component should render required star on the label end 1`] = `
<TextField
  input={
    Object {
      "name": "Foo",
      "value": "",
    }
  }
  isRequired={true}
  label="Foo"
  meta={Object {}}
  type="text"
>
  <FinalFormField
    componentType="textField"
    input={
      Object {
        "name": "Foo",
        "value": "",
      }
    }
    isRequired={true}
    label="Foo"
    meta={Object {}}
    type="text"
  >
    <div
      className="pf-c-form__group"
    >
      <label
        className="pf-c-form__label pf-m-required"
      >
        Foo
      </label>
      <TextInput
        aria-label={null}
        className=""
        id="Foo"
        isAlt={false}
        isDisabled={false}
        isReadOnly={false}
        isRequired={false}
        isValid={true}
        name="Foo"
        onChange={[Function]}
        type="text"
        value=""
      >
        <input
          aria-invalid={false}
          aria-label={null}
          className="pf-c-form-control"
          disabled={false}
          id="Foo"
          name="Foo"
          onChange={[Function]}
          readOnly={false}
          required={false}
          type="text"
          value=""
        />
      </TextInput>
    </div>
  </FinalFormField>
</TextField>
`;
