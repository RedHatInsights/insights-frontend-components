// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form renderer should render all form widgets 1`] = `
<FormRenderer
  initialValues={Object {}}
  onSubmit={[MockFunction]}
  schema={
    Object {
      "properties": Object {
        "boolean": Object {
          "properties": Object {
            "defaultCheckbox": Object {
              "description": "This is the checkbox-description",
              "title": "checkbox (default)",
              "type": "boolean",
            },
            "radio": Object {
              "description": "This is the radio-description",
              "title": "radio buttons",
              "type": "boolean",
            },
            "select": Object {
              "description": "This is the select-description",
              "title": "select box",
              "type": "boolean",
            },
          },
          "title": "Boolean field",
          "type": "object",
        },
        "disabled": Object {
          "default": "I am disabled.",
          "title": "A disabled field",
          "type": "string",
        },
        "readonly": Object {
          "default": "I am read-only.",
          "title": "A readonly field",
          "type": "string",
        },
        "secret": Object {
          "default": "I'm a hidden string.",
          "type": "string",
        },
        "selectWidgetOptions": Object {
          "enum": Array [
            "foo",
            "bar",
          ],
          "enumNames": Array [
            "Foo",
            "Bar",
          ],
          "title": "Custom select widget with options",
          "type": "string",
        },
        "string": Object {
          "properties": Object {
            "color": Object {
              "default": "#151ce6",
              "title": "color picker",
              "type": "string",
            },
            "defaultInput": Object {
              "title": "text input (default)",
              "type": "string",
            },
            "textarea": Object {
              "title": "textarea",
              "type": "string",
            },
          },
          "title": "String field",
          "type": "object",
        },
        "stringFormats": Object {
          "properties": Object {
            "email": Object {
              "format": "email",
              "type": "string",
            },
            "uri": Object {
              "format": "uri",
              "type": "string",
            },
          },
          "title": "String formats",
          "type": "object",
        },
        "widgetOptions": Object {
          "default": "I am yellow",
          "title": "Custom widget with options",
          "type": "string",
        },
      },
      "title": "Widgets",
      "type": "object",
    }
  }
  uiSchema={
    Object {
      "boolean": Object {
        "radio": Object {
          "ui:widget": "radio",
        },
        "select": Object {
          "ui:widget": "select",
        },
      },
      "disabled": Object {
        "ui:disabled": true,
      },
      "readonly": Object {
        "ui:readonly": true,
      },
      "secret": Object {
        "ui:widget": "hidden",
      },
      "selectWidgetOptions": Object {
        "ui:options": Object {
          "backgroundColor": "pink",
        },
      },
      "string": Object {
        "color": Object {
          "ui:widget": "color",
        },
        "textarea": Object {
          "ui:options": Object {
            "rows": 5,
          },
          "ui:widget": "textarea",
        },
      },
      "widgetOptions": Object {
        "ui:options": Object {
          "backgroundColor": "yellow",
        },
      },
    }
  }
>
  <FormTitle
    title="Widgets"
  >
    <div
      className="final-form-title"
    >
      <Title
        className=""
        size="3xl"
      >
        <h1
          className="pf-c-title pf-m-3xl"
        >
          Widgets
        </h1>
      </Title>
    </div>
  </FormTitle>
  <ReactFinalForm
    initialValues={
      Object {
        "disabled": "I am disabled.",
        "readonly": "I am read-only.",
        "secret": "I'm a hidden string.",
        "widgetOptions": "I am yellow",
      }
    }
    mutators={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
      }
    }
  >
    <form
      className=".pf-c-form"
    >
      <Grid
        className=""
        gutter={null}
        lg={null}
        md={null}
        sm={null}
        span={null}
        xl={null}
      >
        <div
          className="pf-l-grid"
        >
          <GridItem
            className=""
            lg={null}
            lgOffset={null}
            lgRowSpan={null}
            md={null}
            mdOffset={null}
            mdRowSpan={null}
            offset={null}
            rowSpan={null}
            sm={null}
            smOffset={null}
            smRowSpan={null}
            span={null}
            xl={null}
            xlOffset={null}
            xlRowSpan={null}
          >
            <div
              className="pf-l-grid__item"
            >
              <FormTitle
                title="String formats"
              >
                <div
                  className="final-form-title"
                >
                  <Title
                    className=""
                    size="3xl"
                  >
                    <h1
                      className="pf-c-title pf-m-3xl"
                    >
                      String formats
                    </h1>
                  </Title>
                </div>
              </FormTitle>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="email"
                label="email"
                name="email"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="email"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="email"
                      name="email"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "email",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        isRequired={false}
                        label="email"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "email",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          isRequired={false}
                          label="email"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              email
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="email"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="email"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value=""
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="email"
                                name="email"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="uri"
                label="uri"
                name="uri"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="uri"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="uri"
                      name="uri"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "uri",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        isRequired={false}
                        label="uri"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "uri",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          isRequired={false}
                          label="uri"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              uri
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="uri"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="uri"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value=""
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="uri"
                                name="uri"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormTitle
                title="Boolean field"
              >
                <div
                  className="final-form-title"
                >
                  <Title
                    className=""
                    size="3xl"
                  >
                    <h1
                      className="pf-c-title pf-m-3xl"
                    >
                      Boolean field
                    </h1>
                  </Title>
                </div>
              </FormTitle>
              <BooleanGroup
                autoFocus={false}
                component={[Function]}
                description="This is the checkbox-description"
                key="defaultCheckbox"
                label="checkbox (default)"
                name="defaultCheckbox"
                validate={[Function]}
              >
                <InputGroup
                  description="This is the checkbox-description"
                >
                  <p>
                    This is the checkbox-description
                  </p>
                  <RadioGroup
                    autoFocus={false}
                    component={[Function]}
                    label="checkbox (default)"
                    name="defaultCheckbox"
                    validate={[Function]}
                  >
                    <FormField
                      autoFocus={false}
                      component={[Function]}
                      label="checkbox (default)"
                      name="defaultCheckbox"
                      validate={[Function]}
                    >
                      <GridItem
                        className=""
                        key="defaultCheckbox"
                        lg={null}
                        lgOffset={null}
                        lgRowSpan={null}
                        md={null}
                        mdOffset={null}
                        mdRowSpan={null}
                        offset={null}
                        rowSpan={null}
                        sm={12}
                        smOffset={null}
                        smRowSpan={null}
                        span={null}
                        xl={null}
                        xlOffset={null}
                        xlRowSpan={null}
                      >
                        <div
                          className="pf-l-grid__item pf-m-12-col-on-sm"
                        >
                          <Field
                            autoFocus={false}
                            component={[Function]}
                            format={[Function]}
                            label="checkbox (default)"
                            name="defaultCheckbox"
                            parse={[Function]}
                            validate={[Function]}
                          >
                            <SwitchField
                              autoFocus={false}
                              input={
                                Object {
                                  "name": "defaultCheckbox",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "value": "",
                                }
                              }
                              label="checkbox (default)"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                }
                              }
                            >
                              <FinalFormField
                                autoFocus={false}
                                componentType="switch"
                                input={
                                  Object {
                                    "name": "defaultCheckbox",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                isRequired={false}
                                label="checkbox (default)"
                                meta={
                                  Object {
                                    "active": false,
                                    "data": Object {},
                                    "dirty": false,
                                    "dirtySinceLastSubmit": false,
                                    "error": undefined,
                                    "initial": undefined,
                                    "invalid": false,
                                    "pristine": true,
                                    "submitError": undefined,
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                  }
                                }
                              >
                                <div
                                  className="pf-c-form__group"
                                >
                                  <label
                                    className="pf-c-form__label "
                                  >
                                    checkbox (default)
                                  </label>
                                  <Checkbox
                                    autoFocus={false}
                                    className=""
                                    id="defaultCheckbox"
                                    isChecked={null}
                                    isDisabled={false}
                                    isValid={true}
                                    name="defaultCheckbox"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    value=""
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        autoFocus={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="defaultCheckbox"
                                        name="defaultCheckbox"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="checkbox"
                                        value=""
                                      />
                                    </div>
                                  </Checkbox>
                                </div>
                              </FinalFormField>
                            </SwitchField>
                          </Field>
                        </div>
                      </GridItem>
                    </FormField>
                  </RadioGroup>
                </InputGroup>
              </BooleanGroup>
              <BooleanGroup
                autoFocus={false}
                component={[Function]}
                description="This is the radio-description"
                key="radio"
                label="radio buttons"
                name="radio"
                type="radio"
                validate={[Function]}
              >
                <InputGroup
                  description="This is the radio-description"
                  title="radio buttons"
                >
                  <h3>
                    radio buttons
                  </h3>
                  <p>
                    This is the radio-description
                  </p>
                  <RadioGroup
                    autoFocus={false}
                    component={[Function]}
                    label="radio buttons"
                    name="radio"
                    type="radio"
                    validate={[Function]}
                  >
                    <FormField
                      autoFocus={false}
                      component={[Function]}
                      key="radio-Yes"
                      label="Yes"
                      name="radio"
                      type="radio"
                      validate={[Function]}
                      value="Yes"
                    >
                      <GridItem
                        className=""
                        key="radio"
                        lg={null}
                        lgOffset={null}
                        lgRowSpan={null}
                        md={null}
                        mdOffset={null}
                        mdRowSpan={null}
                        offset={null}
                        rowSpan={null}
                        sm={12}
                        smOffset={null}
                        smRowSpan={null}
                        span={null}
                        xl={null}
                        xlOffset={null}
                        xlRowSpan={null}
                      >
                        <div
                          className="pf-l-grid__item pf-m-12-col-on-sm"
                        >
                          <Field
                            autoFocus={false}
                            component={[Function]}
                            format={[Function]}
                            label="Yes"
                            name="radio"
                            parse={[Function]}
                            type="radio"
                            validate={[Function]}
                            value="Yes"
                          >
                            <RadioField
                              autoFocus={false}
                              input={
                                Object {
                                  "checked": false,
                                  "name": "radio",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "value": "Yes",
                                }
                              }
                              label="Yes"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                }
                              }
                              type="radio"
                            >
                              <FinalFormField
                                autoFocus={false}
                                componentType="radio"
                                input={
                                  Object {
                                    "checked": false,
                                    "name": "radio",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "value": "Yes",
                                  }
                                }
                                isRequired={false}
                                label="Yes"
                                meta={
                                  Object {
                                    "active": false,
                                    "data": Object {},
                                    "dirty": false,
                                    "dirtySinceLastSubmit": false,
                                    "error": undefined,
                                    "initial": undefined,
                                    "invalid": false,
                                    "pristine": true,
                                    "submitError": undefined,
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                  }
                                }
                                type="radio"
                              >
                                <div
                                  className="pf-c-form__group"
                                >
                                  <label
                                    className="pf-c-form__label "
                                  >
                                    Yes
                                  </label>
                                  <Radio
                                    autoFocus={false}
                                    checked={false}
                                    className=""
                                    id="radio"
                                    isChecked={null}
                                    isDisabled={false}
                                    isValid={true}
                                    name="radio"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="radio"
                                    value="Yes"
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        autoFocus={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="radio"
                                        name="radio"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="radio"
                                        value="Yes"
                                      />
                                    </div>
                                  </Radio>
                                </div>
                              </FinalFormField>
                            </RadioField>
                          </Field>
                        </div>
                      </GridItem>
                    </FormField>
                    <FormField
                      autoFocus={false}
                      component={[Function]}
                      key="radio-No"
                      label="No"
                      name="radio"
                      type="radio"
                      validate={[Function]}
                      value="No"
                    >
                      <GridItem
                        className=""
                        key="radio"
                        lg={null}
                        lgOffset={null}
                        lgRowSpan={null}
                        md={null}
                        mdOffset={null}
                        mdRowSpan={null}
                        offset={null}
                        rowSpan={null}
                        sm={12}
                        smOffset={null}
                        smRowSpan={null}
                        span={null}
                        xl={null}
                        xlOffset={null}
                        xlRowSpan={null}
                      >
                        <div
                          className="pf-l-grid__item pf-m-12-col-on-sm"
                        >
                          <Field
                            autoFocus={false}
                            component={[Function]}
                            format={[Function]}
                            label="No"
                            name="radio"
                            parse={[Function]}
                            type="radio"
                            validate={[Function]}
                            value="No"
                          >
                            <RadioField
                              autoFocus={false}
                              input={
                                Object {
                                  "checked": false,
                                  "name": "radio",
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onFocus": [Function],
                                  "value": "No",
                                }
                              }
                              label="No"
                              meta={
                                Object {
                                  "active": false,
                                  "data": Object {},
                                  "dirty": false,
                                  "dirtySinceLastSubmit": false,
                                  "error": undefined,
                                  "initial": undefined,
                                  "invalid": false,
                                  "pristine": true,
                                  "submitError": undefined,
                                  "submitFailed": false,
                                  "submitSucceeded": false,
                                  "touched": false,
                                  "valid": true,
                                  "visited": false,
                                }
                              }
                              type="radio"
                            >
                              <FinalFormField
                                autoFocus={false}
                                componentType="radio"
                                input={
                                  Object {
                                    "checked": false,
                                    "name": "radio",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "value": "No",
                                  }
                                }
                                isRequired={false}
                                label="No"
                                meta={
                                  Object {
                                    "active": false,
                                    "data": Object {},
                                    "dirty": false,
                                    "dirtySinceLastSubmit": false,
                                    "error": undefined,
                                    "initial": undefined,
                                    "invalid": false,
                                    "pristine": true,
                                    "submitError": undefined,
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                  }
                                }
                                type="radio"
                              >
                                <div
                                  className="pf-c-form__group"
                                >
                                  <label
                                    className="pf-c-form__label "
                                  >
                                    No
                                  </label>
                                  <Radio
                                    autoFocus={false}
                                    checked={false}
                                    className=""
                                    id="radio"
                                    isChecked={null}
                                    isDisabled={false}
                                    isValid={true}
                                    name="radio"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="radio"
                                    value="No"
                                  >
                                    <div
                                      className="pf-c-check"
                                    >
                                      <input
                                        aria-invalid={false}
                                        autoFocus={false}
                                        checked={false}
                                        className="pf-c-check__input"
                                        disabled={false}
                                        id="radio"
                                        name="radio"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onFocus={[Function]}
                                        type="radio"
                                        value="No"
                                      />
                                    </div>
                                  </Radio>
                                </div>
                              </FinalFormField>
                            </RadioField>
                          </Field>
                        </div>
                      </GridItem>
                    </FormField>
                  </RadioGroup>
                </InputGroup>
              </BooleanGroup>
              <Select
                autoFocus={false}
                component={[Function]}
                description="This is the select-description"
                key="select"
                label="select box"
                name="select"
                type="select"
                validate={[Function]}
              >
                <FormField
                  autoFocus={false}
                  component={[Function]}
                  description="This is the select-description"
                  label="select box"
                  name="select"
                  options={
                    Array [
                      Object {
                        "disabled": true,
                        "label": "Please Choose",
                        "value": "empty",
                      },
                      Object {
                        "label": "Yes",
                        "value": "yes",
                      },
                      Object {
                        "label": "No",
                        "value": "no",
                      },
                    ]
                  }
                  type="select"
                  validate={[Function]}
                >
                  <GridItem
                    className=""
                    key="select"
                    lg={null}
                    lgOffset={null}
                    lgRowSpan={null}
                    md={null}
                    mdOffset={null}
                    mdRowSpan={null}
                    offset={null}
                    rowSpan={null}
                    sm={12}
                    smOffset={null}
                    smRowSpan={null}
                    span={null}
                    xl={null}
                    xlOffset={null}
                    xlRowSpan={null}
                  >
                    <div
                      className="pf-l-grid__item pf-m-12-col-on-sm"
                    >
                      <Field
                        autoFocus={false}
                        component={[Function]}
                        description="This is the select-description"
                        format={[Function]}
                        label="select box"
                        name="select"
                        options={
                          Array [
                            Object {
                              "disabled": true,
                              "label": "Please Choose",
                              "value": "empty",
                            },
                            Object {
                              "label": "Yes",
                              "value": "yes",
                            },
                            Object {
                              "label": "No",
                              "value": "no",
                            },
                          ]
                        }
                        parse={[Function]}
                        type="select"
                        validate={[Function]}
                      >
                        <SelectField
                          autoFocus={false}
                          description="This is the select-description"
                          input={
                            Object {
                              "name": "select",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          label="select box"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          options={
                            Array [
                              Object {
                                "disabled": true,
                                "label": "Please Choose",
                                "value": "empty",
                              },
                              Object {
                                "label": "Yes",
                                "value": "yes",
                              },
                              Object {
                                "label": "No",
                                "value": "no",
                              },
                            ]
                          }
                          type="select"
                        >
                          <FinalFormField
                            autoFocus={false}
                            componentType="select"
                            description="This is the select-description"
                            input={
                              Object {
                                "name": "select",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            isRequired={false}
                            label="select box"
                            meta={
                              Object {
                                "active": false,
                                "data": Object {},
                                "dirty": false,
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "initial": undefined,
                                "invalid": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                              }
                            }
                            options={
                              Array [
                                Object {
                                  "disabled": true,
                                  "label": "Please Choose",
                                  "value": "empty",
                                },
                                Object {
                                  "label": "Yes",
                                  "value": "yes",
                                },
                                Object {
                                  "label": "No",
                                  "value": "no",
                                },
                              ]
                            }
                            type="select"
                          >
                            <div
                              className="pf-c-form__group"
                            >
                              <label
                                className="pf-c-form__label "
                              >
                                select box
                              </label>
                              <Select
                                aria-label={null}
                                autoFocus={false}
                                className=""
                                description="This is the select-description"
                                id="select"
                                isDisabled={false}
                                isValid={true}
                                name="select"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="select"
                                value="empty"
                              >
                                <select
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus={false}
                                  className="pf-c-form-control"
                                  description="This is the select-description"
                                  disabled={false}
                                  id="select"
                                  name="select"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="select"
                                  value="empty"
                                >
                                  <SelectOption
                                    className=""
                                    isDisabled={true}
                                    key="empty"
                                    label="Please Choose"
                                    value="empty"
                                  >
                                    <option
                                      className=""
                                      disabled={true}
                                      value="empty"
                                    >
                                      Please Choose
                                    </option>
                                  </SelectOption>
                                  <SelectOption
                                    className=""
                                    isDisabled={false}
                                    key="yes"
                                    label="Yes"
                                    value="yes"
                                  >
                                    <option
                                      className=""
                                      disabled={false}
                                      value="yes"
                                    >
                                      Yes
                                    </option>
                                  </SelectOption>
                                  <SelectOption
                                    className=""
                                    isDisabled={false}
                                    key="no"
                                    label="No"
                                    value="no"
                                  >
                                    <option
                                      className=""
                                      disabled={false}
                                      value="no"
                                    >
                                      No
                                    </option>
                                  </SelectOption>
                                </select>
                              </Select>
                            </div>
                          </FinalFormField>
                        </SelectField>
                      </Field>
                    </div>
                  </GridItem>
                </FormField>
              </Select>
              <FormTitle
                title="String field"
              >
                <div
                  className="final-form-title"
                >
                  <Title
                    className=""
                    size="3xl"
                  >
                    <h1
                      className="pf-c-title pf-m-3xl"
                    >
                      String field
                    </h1>
                  </Title>
                </div>
              </FormTitle>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="defaultInput"
                label="text input (default)"
                name="defaultInput"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="defaultInput"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="text input (default)"
                      name="defaultInput"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "defaultInput",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        isRequired={false}
                        label="text input (default)"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "defaultInput",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          isRequired={false}
                          label="text input (default)"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              text input (default)
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="defaultInput"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="defaultInput"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value=""
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="defaultInput"
                                name="defaultInput"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value=""
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="textarea"
                label="textarea"
                name="textarea"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="textarea"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="textarea"
                      name="textarea"
                      parse={[Function]}
                      validate={[Function]}
                    >
                      <TextareaField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "textarea",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        label="textarea"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textarea"
                          input={
                            Object {
                              "name": "textarea",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          isRequired={false}
                          label="textarea"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              textarea
                            </label>
                            <TextArea
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="textarea"
                              isRequired={false}
                              isValid={true}
                              name="textarea"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              value=""
                            >
                              <textarea
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                id="textarea"
                                name="textarea"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                required={false}
                                value=""
                              />
                            </TextArea>
                          </div>
                        </FinalFormField>
                      </TextareaField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="color"
                label="color picker"
                name="color"
                type="color"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="color"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="color picker"
                      name="color"
                      parse={[Function]}
                      type="color"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "color",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "",
                          }
                        }
                        isRequired={false}
                        label="color picker"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": undefined,
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="color"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "color",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          isRequired={false}
                          label="color picker"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="color"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              color picker
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="color"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="color"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="color"
                              value=""
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="color"
                                name="color"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="color"
                                value=""
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="secret"
                label="secret"
                name="secret"
                type="hidden"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="secret"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="secret"
                      name="secret"
                      parse={[Function]}
                      type="hidden"
                      validate={[Function]}
                    >
                      <component
                        autoFocus={false}
                        input={
                          Object {
                            "name": "secret",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "I'm a hidden string.",
                          }
                        }
                        label="secret"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": "I'm a hidden string.",
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="hidden"
                      >
                        <input
                          autoFocus={false}
                          input={
                            Object {
                              "name": "secret",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "I'm a hidden string.",
                            }
                          }
                          label="secret"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "I'm a hidden string.",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="hidden"
                        />
                      </component>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                isDisabled={true}
                key="disabled"
                label="A disabled field"
                name="disabled"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="disabled"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      isDisabled={true}
                      label="A disabled field"
                      name="disabled"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "disabled",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "I am disabled.",
                          }
                        }
                        isDisabled={true}
                        isRequired={false}
                        label="A disabled field"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": "I am disabled.",
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "disabled",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "I am disabled.",
                            }
                          }
                          isDisabled={true}
                          isRequired={false}
                          label="A disabled field"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "I am disabled.",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              A disabled field
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="disabled"
                              isDisabled={true}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="disabled"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value="I am disabled."
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={true}
                                id="disabled"
                                name="disabled"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value="I am disabled."
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                isReadOnly={true}
                key="readonly"
                label="A readonly field"
                name="readonly"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="readonly"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      isReadOnly={true}
                      label="A readonly field"
                      name="readonly"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "readonly",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "I am read-only.",
                          }
                        }
                        isReadOnly={true}
                        isRequired={false}
                        label="A readonly field"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": "I am read-only.",
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "readonly",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "I am read-only.",
                            }
                          }
                          isReadOnly={true}
                          isRequired={false}
                          label="A readonly field"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "I am read-only.",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              A readonly field
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="readonly"
                              isDisabled={false}
                              isReadOnly={true}
                              isRequired={false}
                              isValid={true}
                              name="readonly"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value="I am read-only."
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="readonly"
                                name="readonly"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={true}
                                required={false}
                                type="text"
                                value="I am read-only."
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormField
                autoFocus={false}
                component={[Function]}
                key="widgetOptions"
                label="Custom widget with options"
                name="widgetOptions"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="widgetOptions"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      label="Custom widget with options"
                      name="widgetOptions"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "widgetOptions",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "I am yellow",
                          }
                        }
                        isRequired={false}
                        label="Custom widget with options"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": "I am yellow",
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "widgetOptions",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "I am yellow",
                            }
                          }
                          isRequired={false}
                          label="Custom widget with options"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "I am yellow",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              Custom widget with options
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="widgetOptions"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="widgetOptions"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value="I am yellow"
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="widgetOptions"
                                name="widgetOptions"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value="I am yellow"
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <Select
                autoFocus={false}
                component={[Function]}
                key="selectWidgetOptions"
                label="Custom select widget with options"
                name="selectWidgetOptions"
                options={
                  Array [
                    "foo",
                    "bar",
                  ]
                }
                optionsNames={
                  Array [
                    "Foo",
                    "Bar",
                  ]
                }
                type="select"
                validate={[Function]}
              >
                <FormField
                  autoFocus={false}
                  component={[Function]}
                  label="Custom select widget with options"
                  name="selectWidgetOptions"
                  options={
                    Array [
                      Object {
                        "disabled": true,
                        "label": "Please Choose",
                        "value": "empty",
                      },
                      Object {
                        "label": "Foo",
                        "value": "foo",
                      },
                      Object {
                        "label": "Bar",
                        "value": "bar",
                      },
                    ]
                  }
                  type="select"
                  validate={[Function]}
                >
                  <GridItem
                    className=""
                    key="selectWidgetOptions"
                    lg={null}
                    lgOffset={null}
                    lgRowSpan={null}
                    md={null}
                    mdOffset={null}
                    mdRowSpan={null}
                    offset={null}
                    rowSpan={null}
                    sm={12}
                    smOffset={null}
                    smRowSpan={null}
                    span={null}
                    xl={null}
                    xlOffset={null}
                    xlRowSpan={null}
                  >
                    <div
                      className="pf-l-grid__item pf-m-12-col-on-sm"
                    >
                      <Field
                        autoFocus={false}
                        component={[Function]}
                        format={[Function]}
                        label="Custom select widget with options"
                        name="selectWidgetOptions"
                        options={
                          Array [
                            Object {
                              "disabled": true,
                              "label": "Please Choose",
                              "value": "empty",
                            },
                            Object {
                              "label": "Foo",
                              "value": "foo",
                            },
                            Object {
                              "label": "Bar",
                              "value": "bar",
                            },
                          ]
                        }
                        parse={[Function]}
                        type="select"
                        validate={[Function]}
                      >
                        <SelectField
                          autoFocus={false}
                          input={
                            Object {
                              "name": "selectWidgetOptions",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "",
                            }
                          }
                          label="Custom select widget with options"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": undefined,
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          options={
                            Array [
                              Object {
                                "disabled": true,
                                "label": "Please Choose",
                                "value": "empty",
                              },
                              Object {
                                "label": "Foo",
                                "value": "foo",
                              },
                              Object {
                                "label": "Bar",
                                "value": "bar",
                              },
                            ]
                          }
                          type="select"
                        >
                          <FinalFormField
                            autoFocus={false}
                            componentType="select"
                            input={
                              Object {
                                "name": "selectWidgetOptions",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "value": "",
                              }
                            }
                            isRequired={false}
                            label="Custom select widget with options"
                            meta={
                              Object {
                                "active": false,
                                "data": Object {},
                                "dirty": false,
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "initial": undefined,
                                "invalid": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                              }
                            }
                            options={
                              Array [
                                Object {
                                  "disabled": true,
                                  "label": "Please Choose",
                                  "value": "empty",
                                },
                                Object {
                                  "label": "Foo",
                                  "value": "foo",
                                },
                                Object {
                                  "label": "Bar",
                                  "value": "bar",
                                },
                              ]
                            }
                            type="select"
                          >
                            <div
                              className="pf-c-form__group"
                            >
                              <label
                                className="pf-c-form__label "
                              >
                                Custom select widget with options
                              </label>
                              <Select
                                aria-label={null}
                                autoFocus={false}
                                className=""
                                id="selectWidgetOptions"
                                isDisabled={false}
                                isValid={true}
                                name="selectWidgetOptions"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="select"
                                value="empty"
                              >
                                <select
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus={false}
                                  className="pf-c-form-control"
                                  disabled={false}
                                  id="selectWidgetOptions"
                                  name="selectWidgetOptions"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  type="select"
                                  value="empty"
                                >
                                  <SelectOption
                                    className=""
                                    isDisabled={true}
                                    key="empty"
                                    label="Please Choose"
                                    value="empty"
                                  >
                                    <option
                                      className=""
                                      disabled={true}
                                      value="empty"
                                    >
                                      Please Choose
                                    </option>
                                  </SelectOption>
                                  <SelectOption
                                    className=""
                                    isDisabled={false}
                                    key="foo"
                                    label="Foo"
                                    value="foo"
                                  >
                                    <option
                                      className=""
                                      disabled={false}
                                      value="foo"
                                    >
                                      Foo
                                    </option>
                                  </SelectOption>
                                  <SelectOption
                                    className=""
                                    isDisabled={false}
                                    key="bar"
                                    label="Bar"
                                    value="bar"
                                  >
                                    <option
                                      className=""
                                      disabled={false}
                                      value="bar"
                                    >
                                      Bar
                                    </option>
                                  </SelectOption>
                                </select>
                              </Select>
                            </div>
                          </FinalFormField>
                        </SelectField>
                      </Field>
                    </div>
                  </GridItem>
                </FormField>
              </Select>
            </div>
          </GridItem>
          <GridItem
            className=""
            lg={null}
            lgOffset={null}
            lgRowSpan={null}
            md={null}
            mdOffset={null}
            mdRowSpan={null}
            offset={null}
            rowSpan={null}
            sm={null}
            smOffset={null}
            smRowSpan={null}
            span={null}
            xl={null}
            xlOffset={null}
            xlRowSpan={null}
          >
            <div
              className="pf-l-grid__item"
            >
              <Button
                aria-label={null}
                className=""
                component="button"
                id="form-renderer-submit"
                isActive={false}
                isBlock={false}
                isDisabled={false}
                isFocus={false}
                isHover={false}
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  aria-disabled={null}
                  aria-label={null}
                  className="pf-c-button pf-m-primary"
                  disabled={false}
                  id="form-renderer-submit"
                  onClick={[Function]}
                  tabIndex={null}
                  type="button"
                >
                  Submit
                </button>
              </Button>
            </div>
          </GridItem>
        </div>
      </Grid>
    </form>
  </ReactFinalForm>
</FormRenderer>
`;

exports[`Form renderer should render form with array property 1`] = `
<FormRenderer
  initialValues={
    Object {
      "tasks": Array [
        Object {
          "details": "task description",
          "title": "task title",
        },
      ],
      "title": "title",
    }
  }
  onSubmit={[MockFunction]}
  schema={
    Object {
      "properties": Object {
        "tasks": Object {
          "items": Object {
            "properties": Object {
              "details": Object {
                "description": "Enter the task details",
                "title": "Task details",
                "type": "string",
              },
              "done": Object {
                "default": false,
                "title": "Done?",
                "type": "boolean",
              },
              "other-tasks": Object {
                "items": Object {
                  "properties": Object {
                    "details": Object {
                      "description": "Enter the task details",
                      "title": "Task details",
                      "type": "string",
                    },
                    "done": Object {
                      "default": false,
                      "title": "Done?",
                      "type": "boolean",
                    },
                    "title": Object {
                      "description": "A sample title",
                      "title": "Title",
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "title",
                  ],
                  "type": "object",
                },
                "title": "Tasks",
                "type": "array",
              },
              "title": Object {
                "description": "A sample title",
                "title": "Title",
                "type": "string",
              },
            },
            "required": Array [
              "title",
            ],
            "type": "object",
          },
          "title": "Tasks",
          "type": "array",
        },
        "title": Object {
          "title": "Task list title",
          "type": "string",
        },
      },
      "required": Array [
        "title",
      ],
      "title": "A list of tasks",
      "type": "object",
    }
  }
  uiSchema={
    Object {
      "tasks": Object {
        "items": Object {
          "details": Object {
            "ui:widget": "textarea",
          },
        },
      },
    }
  }
>
  <FormTitle
    title="A list of tasks"
  >
    <div
      className="final-form-title"
    >
      <Title
        className=""
        size="3xl"
      >
        <h1
          className="pf-c-title pf-m-3xl"
        >
          A list of tasks
        </h1>
      </Title>
    </div>
  </FormTitle>
  <ReactFinalForm
    initialValues={
      Object {
        "tasks": Array [
          Object {
            "details": "task description",
            "title": "task title",
          },
        ],
        "title": "title",
      }
    }
    mutators={
      Object {
        "insert": [Function],
        "move": [Function],
        "pop": [Function],
        "push": [Function],
        "remove": [Function],
        "shift": [Function],
        "swap": [Function],
        "unshift": [Function],
        "update": [Function],
      }
    }
    onSubmit={[MockFunction]}
    render={[Function]}
    subscription={
      Object {
        "pristine": true,
        "submitting": true,
      }
    }
  >
    <form
      className=".pf-c-form"
    >
      <Grid
        className=""
        gutter={null}
        lg={null}
        md={null}
        sm={null}
        span={null}
        xl={null}
      >
        <div
          className="pf-l-grid"
        >
          <GridItem
            className=""
            lg={null}
            lgOffset={null}
            lgRowSpan={null}
            md={null}
            mdOffset={null}
            mdRowSpan={null}
            offset={null}
            rowSpan={null}
            sm={null}
            smOffset={null}
            smRowSpan={null}
            span={null}
            xl={null}
            xlOffset={null}
            xlRowSpan={null}
          >
            <div
              className="pf-l-grid__item"
            >
              <FormField
                autoFocus={false}
                component={[Function]}
                isRequired={false}
                key="title"
                label="Task list title"
                name="title"
                type="text"
                validate={[Function]}
              >
                <GridItem
                  className=""
                  key="title"
                  lg={null}
                  lgOffset={null}
                  lgRowSpan={null}
                  md={null}
                  mdOffset={null}
                  mdRowSpan={null}
                  offset={null}
                  rowSpan={null}
                  sm={12}
                  smOffset={null}
                  smRowSpan={null}
                  span={null}
                  xl={null}
                  xlOffset={null}
                  xlRowSpan={null}
                >
                  <div
                    className="pf-l-grid__item pf-m-12-col-on-sm"
                  >
                    <Field
                      autoFocus={false}
                      component={[Function]}
                      format={[Function]}
                      isRequired={false}
                      label="Task list title"
                      name="title"
                      parse={[Function]}
                      type="text"
                      validate={[Function]}
                    >
                      <TextField
                        autoFocus={false}
                        input={
                          Object {
                            "name": "title",
                            "onBlur": [Function],
                            "onChange": [Function],
                            "onFocus": [Function],
                            "value": "title",
                          }
                        }
                        isRequired={false}
                        label="Task list title"
                        meta={
                          Object {
                            "active": false,
                            "data": Object {},
                            "dirty": false,
                            "dirtySinceLastSubmit": false,
                            "error": undefined,
                            "initial": "title",
                            "invalid": false,
                            "pristine": true,
                            "submitError": undefined,
                            "submitFailed": false,
                            "submitSucceeded": false,
                            "touched": false,
                            "valid": true,
                            "visited": false,
                          }
                        }
                        type="text"
                      >
                        <FinalFormField
                          autoFocus={false}
                          componentType="textField"
                          input={
                            Object {
                              "name": "title",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "title",
                            }
                          }
                          isRequired={false}
                          label="Task list title"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "title",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <div
                            className="pf-c-form__group"
                          >
                            <label
                              className="pf-c-form__label "
                            >
                              Task list title
                            </label>
                            <TextInput
                              aria-label={null}
                              autoFocus={false}
                              className=""
                              id="title"
                              isDisabled={false}
                              isReadOnly={false}
                              isRequired={false}
                              isValid={true}
                              name="title"
                              onBlur={[Function]}
                              onChange={[Function]}
                              onFocus={[Function]}
                              type="text"
                              value="title"
                            >
                              <input
                                aria-invalid={false}
                                aria-label={null}
                                autoFocus={false}
                                className="pf-c-form-control"
                                disabled={false}
                                id="title"
                                name="title"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                readOnly={false}
                                required={false}
                                type="text"
                                value="title"
                              />
                            </TextInput>
                          </div>
                        </FinalFormField>
                      </TextField>
                    </Field>
                  </div>
                </GridItem>
              </FormField>
              <FormTitle
                title="Tasks"
              >
                <div
                  className="final-form-title"
                >
                  <Title
                    className=""
                    size="3xl"
                  >
                    <h1
                      className="pf-c-title pf-m-3xl"
                    >
                      Tasks
                    </h1>
                  </Title>
                </div>
              </FormTitle>
              <button
                id="add-tasks"
                onClick={[Function]}
                type="button"
              >
                Add 
                tasks
              </button>
              <ReactFinalFormFieldArray(4.8.1)(1.0.6)
                name="tasks"
                render={[Function]}
              >
                <FormField
                  autoFocus={false}
                  component={[Function]}
                  description="A sample title"
                  isRequired={false}
                  key="tasks[0].title"
                  label="Title"
                  name="tasks[0].title"
                  type="text"
                  validate={[Function]}
                >
                  <GridItem
                    className=""
                    key="tasks[0].title"
                    lg={null}
                    lgOffset={null}
                    lgRowSpan={null}
                    md={null}
                    mdOffset={null}
                    mdRowSpan={null}
                    offset={null}
                    rowSpan={null}
                    sm={12}
                    smOffset={null}
                    smRowSpan={null}
                    span={null}
                    xl={null}
                    xlOffset={null}
                    xlRowSpan={null}
                  >
                    <div
                      className="pf-l-grid__item pf-m-12-col-on-sm"
                    >
                      <Field
                        autoFocus={false}
                        component={[Function]}
                        description="A sample title"
                        format={[Function]}
                        isRequired={false}
                        label="Title"
                        name="tasks[0].title"
                        parse={[Function]}
                        type="text"
                        validate={[Function]}
                      >
                        <TextField
                          autoFocus={false}
                          description="A sample title"
                          input={
                            Object {
                              "name": "tasks[0].title",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "task title",
                            }
                          }
                          isRequired={false}
                          label="Title"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "task title",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                          type="text"
                        >
                          <FinalFormField
                            autoFocus={false}
                            componentType="textField"
                            description="A sample title"
                            input={
                              Object {
                                "name": "tasks[0].title",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "value": "task title",
                              }
                            }
                            isRequired={false}
                            label="Title"
                            meta={
                              Object {
                                "active": false,
                                "data": Object {},
                                "dirty": false,
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "initial": "task title",
                                "invalid": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                              }
                            }
                            type="text"
                          >
                            <div
                              className="pf-c-form__group"
                            >
                              <label
                                className="pf-c-form__label "
                              >
                                Title
                              </label>
                              <TextInput
                                aria-label={null}
                                autoFocus={false}
                                className=""
                                description="A sample title"
                                id="tasks[0].title"
                                isDisabled={false}
                                isReadOnly={false}
                                isRequired={false}
                                isValid={true}
                                name="tasks[0].title"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                type="text"
                                value="task title"
                              >
                                <input
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus={false}
                                  className="pf-c-form-control"
                                  description="A sample title"
                                  disabled={false}
                                  id="tasks[0].title"
                                  name="tasks[0].title"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  readOnly={false}
                                  required={false}
                                  type="text"
                                  value="task title"
                                />
                              </TextInput>
                            </div>
                          </FinalFormField>
                        </TextField>
                      </Field>
                    </div>
                  </GridItem>
                </FormField>
                <FormField
                  autoFocus={false}
                  component={[Function]}
                  description="Enter the task details"
                  key="tasks[0].details"
                  label="Task details"
                  name="tasks[0].details"
                  validate={[Function]}
                >
                  <GridItem
                    className=""
                    key="tasks[0].details"
                    lg={null}
                    lgOffset={null}
                    lgRowSpan={null}
                    md={null}
                    mdOffset={null}
                    mdRowSpan={null}
                    offset={null}
                    rowSpan={null}
                    sm={12}
                    smOffset={null}
                    smRowSpan={null}
                    span={null}
                    xl={null}
                    xlOffset={null}
                    xlRowSpan={null}
                  >
                    <div
                      className="pf-l-grid__item pf-m-12-col-on-sm"
                    >
                      <Field
                        autoFocus={false}
                        component={[Function]}
                        description="Enter the task details"
                        format={[Function]}
                        label="Task details"
                        name="tasks[0].details"
                        parse={[Function]}
                        validate={[Function]}
                      >
                        <TextareaField
                          autoFocus={false}
                          description="Enter the task details"
                          input={
                            Object {
                              "name": "tasks[0].details",
                              "onBlur": [Function],
                              "onChange": [Function],
                              "onFocus": [Function],
                              "value": "task description",
                            }
                          }
                          label="Task details"
                          meta={
                            Object {
                              "active": false,
                              "data": Object {},
                              "dirty": false,
                              "dirtySinceLastSubmit": false,
                              "error": undefined,
                              "initial": "task description",
                              "invalid": false,
                              "pristine": true,
                              "submitError": undefined,
                              "submitFailed": false,
                              "submitSucceeded": false,
                              "touched": false,
                              "valid": true,
                              "visited": false,
                            }
                          }
                        >
                          <FinalFormField
                            autoFocus={false}
                            componentType="textarea"
                            description="Enter the task details"
                            input={
                              Object {
                                "name": "tasks[0].details",
                                "onBlur": [Function],
                                "onChange": [Function],
                                "onFocus": [Function],
                                "value": "task description",
                              }
                            }
                            isRequired={false}
                            label="Task details"
                            meta={
                              Object {
                                "active": false,
                                "data": Object {},
                                "dirty": false,
                                "dirtySinceLastSubmit": false,
                                "error": undefined,
                                "initial": "task description",
                                "invalid": false,
                                "pristine": true,
                                "submitError": undefined,
                                "submitFailed": false,
                                "submitSucceeded": false,
                                "touched": false,
                                "valid": true,
                                "visited": false,
                              }
                            }
                          >
                            <div
                              className="pf-c-form__group"
                            >
                              <label
                                className="pf-c-form__label "
                              >
                                Task details
                              </label>
                              <TextArea
                                aria-label={null}
                                autoFocus={false}
                                className=""
                                description="Enter the task details"
                                id="tasks[0].details"
                                isRequired={false}
                                isValid={true}
                                name="tasks[0].details"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                value="task description"
                              >
                                <textarea
                                  aria-invalid={false}
                                  aria-label={null}
                                  autoFocus={false}
                                  className="pf-c-form-control"
                                  description="Enter the task details"
                                  id="tasks[0].details"
                                  name="tasks[0].details"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  value="task description"
                                />
                              </TextArea>
                            </div>
                          </FinalFormField>
                        </TextareaField>
                      </Field>
                    </div>
                  </GridItem>
                </FormField>
                <BooleanGroup
                  autoFocus={false}
                  component={[Function]}
                  key="tasks[0].done"
                  label="Done?"
                  name="tasks[0].done"
                  validate={[Function]}
                >
                  <InputGroup>
                    <RadioGroup
                      autoFocus={false}
                      component={[Function]}
                      label="Done?"
                      name="tasks[0].done"
                      validate={[Function]}
                    >
                      <FormField
                        autoFocus={false}
                        component={[Function]}
                        label="Done?"
                        name="tasks[0].done"
                        validate={[Function]}
                      >
                        <GridItem
                          className=""
                          key="tasks[0].done"
                          lg={null}
                          lgOffset={null}
                          lgRowSpan={null}
                          md={null}
                          mdOffset={null}
                          mdRowSpan={null}
                          offset={null}
                          rowSpan={null}
                          sm={12}
                          smOffset={null}
                          smRowSpan={null}
                          span={null}
                          xl={null}
                          xlOffset={null}
                          xlRowSpan={null}
                        >
                          <div
                            className="pf-l-grid__item pf-m-12-col-on-sm"
                          >
                            <Field
                              autoFocus={false}
                              component={[Function]}
                              format={[Function]}
                              label="Done?"
                              name="tasks[0].done"
                              parse={[Function]}
                              validate={[Function]}
                            >
                              <SwitchField
                                autoFocus={false}
                                input={
                                  Object {
                                    "name": "tasks[0].done",
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onFocus": [Function],
                                    "value": "",
                                  }
                                }
                                label="Done?"
                                meta={
                                  Object {
                                    "active": false,
                                    "data": Object {},
                                    "dirty": false,
                                    "dirtySinceLastSubmit": false,
                                    "error": undefined,
                                    "initial": undefined,
                                    "invalid": false,
                                    "pristine": true,
                                    "submitError": undefined,
                                    "submitFailed": false,
                                    "submitSucceeded": false,
                                    "touched": false,
                                    "valid": true,
                                    "visited": false,
                                  }
                                }
                              >
                                <FinalFormField
                                  autoFocus={false}
                                  componentType="switch"
                                  input={
                                    Object {
                                      "name": "tasks[0].done",
                                      "onBlur": [Function],
                                      "onChange": [Function],
                                      "onFocus": [Function],
                                      "value": "",
                                    }
                                  }
                                  isRequired={false}
                                  label="Done?"
                                  meta={
                                    Object {
                                      "active": false,
                                      "data": Object {},
                                      "dirty": false,
                                      "dirtySinceLastSubmit": false,
                                      "error": undefined,
                                      "initial": undefined,
                                      "invalid": false,
                                      "pristine": true,
                                      "submitError": undefined,
                                      "submitFailed": false,
                                      "submitSucceeded": false,
                                      "touched": false,
                                      "valid": true,
                                      "visited": false,
                                    }
                                  }
                                >
                                  <div
                                    className="pf-c-form__group"
                                  >
                                    <label
                                      className="pf-c-form__label "
                                    >
                                      Done?
                                    </label>
                                    <Checkbox
                                      autoFocus={false}
                                      className=""
                                      id="tasks[0].done"
                                      isChecked={null}
                                      isDisabled={false}
                                      isValid={true}
                                      name="tasks[0].done"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      value=""
                                    >
                                      <div
                                        className="pf-c-check"
                                      >
                                        <input
                                          aria-invalid={false}
                                          autoFocus={false}
                                          className="pf-c-check__input"
                                          disabled={false}
                                          id="tasks[0].done"
                                          name="tasks[0].done"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          type="checkbox"
                                          value=""
                                        />
                                      </div>
                                    </Checkbox>
                                  </div>
                                </FinalFormField>
                              </SwitchField>
                            </Field>
                          </div>
                        </GridItem>
                      </FormField>
                    </RadioGroup>
                  </InputGroup>
                </BooleanGroup>
                <FormTitle
                  title="Tasks"
                >
                  <div
                    className="final-form-title"
                  >
                    <Title
                      className=""
                      size="3xl"
                    >
                      <h1
                        className="pf-c-title pf-m-3xl"
                      >
                        Tasks
                      </h1>
                    </Title>
                  </div>
                </FormTitle>
                <button
                  id="add-tasks[0].other-tasks"
                  onClick={[Function]}
                  type="button"
                >
                  Add 
                  tasks[0].other-tasks
                </button>
                <ReactFinalFormFieldArray(4.8.1)(1.0.6)
                  name="tasks[0].other-tasks"
                  render={[Function]}
                />
                <button
                  id="remove-tasks[0]-0"
                  onClick={[Function]}
                  type="button"
                >
                  Remove 
                  tasks
                </button>
              </ReactFinalFormFieldArray(4.8.1)(1.0.6)>
            </div>
          </GridItem>
          <GridItem
            className=""
            lg={null}
            lgOffset={null}
            lgRowSpan={null}
            md={null}
            mdOffset={null}
            mdRowSpan={null}
            offset={null}
            rowSpan={null}
            sm={null}
            smOffset={null}
            smRowSpan={null}
            span={null}
            xl={null}
            xlOffset={null}
            xlRowSpan={null}
          >
            <div
              className="pf-l-grid__item"
            >
              <Button
                aria-label={null}
                className=""
                component="button"
                id="form-renderer-submit"
                isActive={false}
                isBlock={false}
                isDisabled={false}
                isFocus={false}
                isHover={false}
                onClick={[Function]}
                type="button"
                variant="primary"
              >
                <button
                  aria-disabled={null}
                  aria-label={null}
                  className="pf-c-button pf-m-primary"
                  disabled={false}
                  id="form-renderer-submit"
                  onClick={[Function]}
                  tabIndex={null}
                  type="button"
                >
                  Submit
                </button>
              </Button>
            </div>
          </GridItem>
        </div>
      </Grid>
    </form>
  </ReactFinalForm>
</FormRenderer>
`;
