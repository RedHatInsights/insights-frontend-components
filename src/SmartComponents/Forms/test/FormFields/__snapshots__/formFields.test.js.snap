// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FinalForm wrapper fields should render TextField with label and helper text 1`] = `
<FormContext>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <TextField
      helperText="TextField helper text"
      label="TextField label"
      name="field"
    >
      <FieldInterface
        componentType="text-field"
        helperText="TextField helper text"
        label="TextField label"
        name="field"
      >
        <FormConditionWrapper>
          <FormGroupWrapper
            componentType="text-field"
            helperText="TextField helper text"
            id="field"
            label="TextField label"
            name="field"
            validate={
              Array [
                undefined,
              ]
            }
          >
            <Field
              component={[Function]}
              componentType="text-field"
              format={[Function]}
              helperText="TextField helper text"
              id="field"
              label="TextField label"
              name="field"
              parse={[Function]}
              validate={[Function]}
            >
              <FinalFormField
                componentType="text-field"
                helperText="TextField helper text"
                id="field"
                input={
                  Object {
                    "name": "field",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                isRequired={false}
                label="TextField label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": undefined,
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
              >
                <FormGroup
                  className=""
                  fieldId="field"
                  helperText="TextField helper text"
                  isInline={false}
                  isRequired={false}
                  isValid={true}
                  label="TextField label"
                >
                  <div
                    className="pf-c-form__group"
                  >
                    <label
                      className="pf-c-form__label"
                      htmlFor="field"
                    >
                      TextField label
                    </label>
                    <TextInput
                      aria-label={null}
                      className=""
                      id="field"
                      isAlt={false}
                      isDisabled={false}
                      isReadOnly={false}
                      isRequired={false}
                      isValid={true}
                      name="field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        disabled={false}
                        id="field"
                        name="field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </TextInput>
                    <div
                      aria-live="polite"
                      className="pf-c-form__helper-text"
                      id="field-helper"
                    >
                      TextField helper text
                    </div>
                  </div>
                </FormGroup>
              </FinalFormField>
            </Field>
          </FormGroupWrapper>
        </FormConditionWrapper>
      </FieldInterface>
    </TextField>
  </ReactFinalForm>
</FormContext>
`;

exports[`FinalForm wrapper fields should render TextField without any label 1`] = `
<FormContext>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <TextField
      name="field"
    >
      <FieldInterface
        componentType="text-field"
        name="field"
      >
        <FormConditionWrapper>
          <FormGroupWrapper
            componentType="text-field"
            id="field"
            name="field"
            validate={
              Array [
                undefined,
              ]
            }
          >
            <Field
              component={[Function]}
              componentType="text-field"
              format={[Function]}
              id="field"
              name="field"
              parse={[Function]}
              validate={[Function]}
            >
              <FinalFormField
                componentType="text-field"
                id="field"
                input={
                  Object {
                    "name": "field",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                isRequired={false}
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": undefined,
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
              >
                <FormGroup
                  className=""
                  fieldId="field"
                  isInline={false}
                  isRequired={false}
                  isValid={true}
                >
                  <div
                    className="pf-c-form__group"
                  >
                    <TextInput
                      aria-label={null}
                      className=""
                      id="field"
                      isAlt={false}
                      isDisabled={false}
                      isReadOnly={false}
                      isRequired={false}
                      isValid={true}
                      name="field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        disabled={false}
                        id="field"
                        name="field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        readOnly={false}
                        required={false}
                        type="text"
                        value=""
                      />
                    </TextInput>
                  </div>
                </FormGroup>
              </FinalFormField>
            </Field>
          </FormGroupWrapper>
        </FormConditionWrapper>
      </FieldInterface>
    </TextField>
  </ReactFinalForm>
</FormContext>
`;

exports[`FinalForm wrapper fields should render TextareaField with label and helper text 1`] = `
<FormContext>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <TextareaField
      helperText="TextareaField helper text"
      label="TextareaField label"
      name="field"
    >
      <FieldInterface
        componentType="textarea-field"
        helperText="TextareaField helper text"
        label="TextareaField label"
        name="field"
      >
        <FormConditionWrapper>
          <FormGroupWrapper
            componentType="textarea-field"
            helperText="TextareaField helper text"
            id="field"
            label="TextareaField label"
            name="field"
            validate={
              Array [
                undefined,
              ]
            }
          >
            <Field
              component={[Function]}
              componentType="textarea-field"
              format={[Function]}
              helperText="TextareaField helper text"
              id="field"
              label="TextareaField label"
              name="field"
              parse={[Function]}
              validate={[Function]}
            >
              <FinalFormField
                componentType="textarea-field"
                helperText="TextareaField helper text"
                id="field"
                input={
                  Object {
                    "name": "field",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                isRequired={false}
                label="TextareaField label"
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": undefined,
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
              >
                <FormGroup
                  className=""
                  fieldId="field"
                  helperText="TextareaField helper text"
                  isInline={false}
                  isRequired={false}
                  isValid={true}
                  label="TextareaField label"
                >
                  <div
                    className="pf-c-form__group"
                  >
                    <label
                      className="pf-c-form__label"
                      htmlFor="field"
                    >
                      TextareaField label
                    </label>
                    <TextArea
                      aria-label={null}
                      className=""
                      id="field"
                      isRequired={false}
                      isValid={true}
                      name="field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value=""
                    >
                      <textarea
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        id="field"
                        name="field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        value=""
                      />
                    </TextArea>
                    <div
                      aria-live="polite"
                      className="pf-c-form__helper-text"
                      id="field-helper"
                    >
                      TextareaField helper text
                    </div>
                  </div>
                </FormGroup>
              </FinalFormField>
            </Field>
          </FormGroupWrapper>
        </FormConditionWrapper>
      </FieldInterface>
    </TextareaField>
  </ReactFinalForm>
</FormContext>
`;

exports[`FinalForm wrapper fields should render TextareaField with without any label 1`] = `
<FormContext>
  <ReactFinalForm
    onSubmit={[MockFunction]}
  >
    <TextareaField
      name="field"
    >
      <FieldInterface
        componentType="textarea-field"
        name="field"
      >
        <FormConditionWrapper>
          <FormGroupWrapper
            componentType="textarea-field"
            id="field"
            name="field"
            validate={
              Array [
                undefined,
              ]
            }
          >
            <Field
              component={[Function]}
              componentType="textarea-field"
              format={[Function]}
              id="field"
              name="field"
              parse={[Function]}
              validate={[Function]}
            >
              <FinalFormField
                componentType="textarea-field"
                id="field"
                input={
                  Object {
                    "name": "field",
                    "onBlur": [Function],
                    "onChange": [Function],
                    "onFocus": [Function],
                    "value": "",
                  }
                }
                isRequired={false}
                meta={
                  Object {
                    "active": false,
                    "data": Object {},
                    "dirty": false,
                    "dirtySinceLastSubmit": false,
                    "error": undefined,
                    "initial": undefined,
                    "invalid": false,
                    "pristine": true,
                    "submitError": undefined,
                    "submitFailed": false,
                    "submitSucceeded": false,
                    "touched": false,
                    "valid": true,
                    "visited": false,
                  }
                }
              >
                <FormGroup
                  className=""
                  fieldId="field"
                  isInline={false}
                  isRequired={false}
                  isValid={true}
                >
                  <div
                    className="pf-c-form__group"
                  >
                    <TextArea
                      aria-label={null}
                      className=""
                      id="field"
                      isRequired={false}
                      isValid={true}
                      name="field"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      value=""
                    >
                      <textarea
                        aria-invalid={false}
                        aria-label={null}
                        className="pf-c-form-control"
                        id="field"
                        name="field"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        value=""
                      />
                    </TextArea>
                  </div>
                </FormGroup>
              </FinalFormField>
            </Field>
          </FormGroupWrapper>
        </FormConditionWrapper>
      </FieldInterface>
    </TextareaField>
  </ReactFinalForm>
</FormContext>
`;
